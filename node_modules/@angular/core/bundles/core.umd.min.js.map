{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ngFactoryDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","elementDepthCount","bindingsEnabled","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","activeDirectiveId","hasActiveElementFlag","flag","_selectedIndex","setActiveHostElement","elementIndex","getSelectedIndex","executeElementExitFn","setSelectedIndex","previousOrParentTNode","isParent","_elementExitFn","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","nextContextImpl","level","walkUpViews","nestingLevel","currentView","_currentSanitizer","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","config","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","str","prop","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","bindingValue","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","initialStyles","findInitialStylingValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","hasMapBindings","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","mockElement","mapFn","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","inputsStore","outputsStore","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","injectorDef","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","applyStylingMapDirectly","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","Math","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","getComponentMetadata","compileFactory","hasSelectorScope","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","compileDirective","getDirectiveMetadata","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","createProxy","handler","g","Proxy","contains","toggle","ownKeys","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.9\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ngFactoryDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var factoryFn = type[NG_FACTORY_DEF] || null;\n        if (!factoryFn && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngFactoryDef' property.\");\n        }\n        return factoryFn;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var activeDirectiveId = 0;\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (_selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        _selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (getSelectedIndex() !== elementIndex) {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = 0;\n        }\n    }\n    var _elementExitFn = null;\n    function executeElementExitFn() {\n        _elementExitFn();\n        // TODO (matsko|misko): remove this unassignment once the state management of\n        //                      global variables are better managed.\n        _selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        _elementExitFn = fn;\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n    }\n    /* tslint:disable */\n    var _selectedIndex = -1 << 1 /* Size */;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index << 1 /* Size */;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        initialStyling = initialStyling || allocStylingMapArray();\n        return [\n            0 /* Initial */,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray() {\n        return [''];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 2. There are no collisions (i.e. properties with more than one binding)\n     * 3. There are only \"prop\" or \"map\" bindings present, but not both\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var config = getConfig(context);\n        return ((config & getLockedConfig(hostBindingsMode)) !== 0) &&\n            ((config & 4 /* HasCollisions */) === 0) &&\n            ((config & 3 /* HasPropAndMapBindings */) !== 3 /* HasPropAndMapBindings */);\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex > 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 128 /* HostBindingsLocked */ :\n            64 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 2 /* isComponentHost */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        // TODO(crisbeto): unify injectable factories with getFactory.\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        var factory = def && def.factory || getFactoryDef(typeAny);\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ?\n            value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() ||\n            null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        if (value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        if (value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 32 /* HasHostBindings */ : 16 /* HasTemplateBindings */);\n            patchConfig(context, prop ? 1 /* HasPropBindings */ : 2 /* HasMapBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 32 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 1 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 4 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 8 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * See `allowDirectStylingApply`.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, map, applyFn, sanitizer, forceUpdate) {\n        if (forceUpdate || hasValueChanged(data[bindingIndex], map)) {\n            setValue(data, bindingIndex, map);\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * See `allowDirectStylingApply`.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, applyFn, sanitizer) {\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer);\n            return true;\n        }\n        return false;\n    }\n    function applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 2 /* SanitizeOnly */) : valueToApply;\n        }\n        else if (hasConfig(context, 8 /* HasInitialStyling */)) {\n            var initialStyles = getStylingMapArray(context);\n            if (initialStyles) {\n                valueToApply = findInitialStylingValue(initialStyles, prop);\n            }\n        }\n        applyFn(renderer, element, prop, valueToApply, bindingIndex);\n    }\n    function findInitialStylingValue(map, prop) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p >= prop) {\n                return p === prop ? getMapValue(map, i) : null;\n            }\n        }\n        return null;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            if (value) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isTemplateLocked\", {\n            get: function () { return isContextLocked(this.context, true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"isHostBindingsLocked\", {\n            get: function () { return isContextLocked(this.context, false); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () {\n                var hasMapBindings = hasConfig(this.context, 2 /* HasMapBindings */);\n                var hasPropBindings = hasConfig(this.context, 1 /* HasPropBindings */);\n                var hasCollisions = hasConfig(this.context, 4 /* HasCollisions */);\n                var hasTemplateBindings = hasConfig(this.context, 16 /* HasTemplateBindings */);\n                var hasHostBindings = hasConfig(this.context, 32 /* HasHostBindings */);\n                var templateBindingsLocked = hasConfig(this.context, 64 /* TemplateBindingsLocked */);\n                var hostBindingsLocked = hasConfig(this.context, 128 /* HostBindingsLocked */);\n                var allowDirectStyling$1 = allowDirectStyling(this.context, false) || allowDirectStyling(this.context, true);\n                return {\n                    hasMapBindings: hasMapBindings,\n                    hasPropBindings: hasPropBindings,\n                    hasCollisions: hasCollisions,\n                    hasTemplateBindings: hasTemplateBindings,\n                    hasHostBindings: hasHostBindings,\n                    templateBindingsLocked: templateBindingsLocked,\n                    hostBindingsLocked: hostBindingsLocked,\n                    allowDirectStyling: allowDirectStyling$1,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context, 2 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context, null, mockElement, this._data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context, null, mockElement, this._data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            inputsStore = generatePropertyAliases(directiveDef.inputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            propName[0] === ANIMATION_PROP_PREFIX || typeof Node !== 'function' ||\n            !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 8 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 2 /* isComponentHost */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = (flags & 2 /* isComponentHost */) | 1 /* isDirectiveHost */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponentHost(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased ? setClass : setStyle, sanitizer);\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false);\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true);\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var directiveIndex = getActiveDirectiveId();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = lView[bindingIndex];\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, stylingMapArr, isClassBased ? setClass : setStyle, sanitizer, valueHasChanged);\n        }\n        else {\n            updated = valueHasChanged;\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? 'class' : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray();\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray();\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = tNode.inputs;\n            if (inputData != null) {\n                if (inputData.hasOwnProperty('class')) {\n                    tNode.flags |= 16 /* hasClassInput */;\n                }\n                if (inputData.hasOwnProperty('style')) {\n                    tNode.flags |= 32 /* hasStyleInput */;\n                }\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ngInjectableDef = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.9');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, lView, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        var ngFactoryDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, meta.templateUrl, meta.metadata);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getComponentMetadata(compiler, type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n            if (metadata.templateUrl) {\n                error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n            }\n            if (metadata.styleUrls && metadata.styleUrls.length) {\n                error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n            }\n            error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n            throw new Error(error_1.join('\\n'));\n        }\n        var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n        var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n        if (meta.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: meta, templateUrl: templateUrl };\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/ngDirectiveDef.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngFactory.js\", metadata, true);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngPipeDef.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please add `import \\'@angular/localize/init\\';` to your polyfills.ts file.');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bn = getRootContext;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bm = noSideEffects;\n    exports.ɵangular_packages_core_core_bi = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bj = makePropDecorator;\n    exports.ɵangular_packages_core_core_bk = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}